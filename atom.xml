<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[阿城的blog]]></title>
  <subtitle><![CDATA[抓啊抓啊~~~]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://qiutc.me/"/>
  <updated>2015-11-22T08:42:08.000Z</updated>
  <id>http://qiutc.me/</id>
  
  <author>
    <name><![CDATA[阿城]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[[RN]2.样式style--React-Native learning notes]]></title>
    <link href="http://qiutc.me/post/RN-2-%E6%A0%B7%E5%BC%8Fstyle-React-Native-learning-notes.html"/>
    <id>http://qiutc.me/post/RN-2-样式style-React-Native-learning-notes.html</id>
    <published>2015-11-22T08:27:03.000Z</published>
    <updated>2015-11-22T08:42:08.000Z</updated>
    <content type="html"><![CDATA[<h1 id="tip:">tip:</h1><p>这是一篇学习 React-Native for Android 的学习笔记，主要上其实是看官方的文档来自己学习 RN，目前的主要是学习android的开发。</p>
<p>😏😏😏😏😏😏😏😏😏😏😏😏😏😏😏😏</p>
<h1 id="React-Native_for_Android_样式的使用。">React-Native for Android 样式的使用。</h1><p>React-Native 编写的应用的样式不是靠css来实现的，而是依赖javascript来为你的应用来添加样式，先不讨论这样做的好处与坏处，因为这个实现方法本身就存在着很多争议，我们主要关注他的样式的语法和特性。</p>
<h1 id="声明样式:">声明样式:</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> styles = StyleSheet.create(&#123;</span><br><span class="line">     <span class="keyword">base</span>: &#123;</span><br><span class="line">          width: <span class="number">38</span>,</span><br><span class="line">          height: <span class="number">38</span>,</span><br><span class="line">     &#125;,</span><br><span class="line">     background: &#123;</span><br><span class="line">          backgroundColor: <span class="string">'#222222'</span>,</span><br><span class="line">     &#125;,</span><br><span class="line">     active: &#123;</span><br><span class="line">          borderWidth: <span class="number">2</span>,</span><br><span class="line">          borderColor: ‘<span class="preprocessor">#ff00ff',</span></span><br><span class="line">     &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>从语法来看：调用了React-Native的一个构造方法，传入一个对象生成style，如果你写过React就应该很熟悉这种写法，和React的React.createCladd()语法是一样的，传入对象的key就相当于类名（我是这么理解），每个类也是一个对象，可以配置各种样式参数，总体来说和CSS的写法差不多，差别上把CSS的命名又“-”连字符改成驼峰写法，然后长度不用加单位“px”，字符串比如色值需要加引号写成字符串。<br>其实也是和React的行内样式写法的语法一样。</p>
<h1 id="样式的使用:">样式的使用:</h1><p>所有的核心组件都支持样式属性<br><code>&lt;View style={style.base} /&gt;</code><br>当你需要设置多个属性类的时候，可以传入一个数组<br><code>&lt;View style={[style.base,style.backgroundColor]} /&gt;</code><br>在两个样式又冲突的情况下，以右边的值优先，有些情况下可以加一些条件判断样式是否加载，比如，<br><code>&lt;View style={[style.base,this.state.active&amp;&amp;style.active]} /&gt;</code><br>你也可以在组件中render样式，然而这种做法不推荐，其实就像一般html页面中行内样式不推荐一样，<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;View</span><br><span class="line">  style=&#123;[styles.base,&#123;<span class="variable">width</span>:<span class="keyword">this</span>.state.<span class="variable">width</span>, <span class="variable">height</span>:<span class="keyword">this</span>.state.<span class="variable">width</span>*<span class="keyword">this</span>.state.aspectRatio&#125;]&#125;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="布局_–_flexbox">布局 – flexbox</h1><p>React-Native 采用flexbox布局方式，flexbox是css3引入的布局模型－－弹性盒子模型，旨在通过弹性的方式对齐和分布容器中的item，使其适应不同的宽度和高度。<br>在 React-Native 中的flexbox 是css3中flexbox的一个子集，并不支持所有的flexbox属性。<br>flexbox  布局分为flexbox container 和 flexbox item ：如下图<br><img src="/img/RN_img_4.png" alt=""><br>flexbox 是一个属性的集合，有些是属于container的有些湿属于item的。<br>可以看下面这幅图：<br><img src="/img/RN_img_5.png" alt=""><br>对于 container 有 main axis（主轴）和cross axis（交叉轴）。main size 和 cross size 分别是container主轴方向的交叉轴方向的宽度，main start 和 main end 分别是主轴的起始和结点，其他同理，container里面包含items。<br>下面介绍一下属性：</p>
<h2 id="container的属性：">container的属性：</h2><ul>
<li><p>flexDirection: ‘ row ‘ | ‘ column ‘<br>主轴的方向，水平 | 垂直，默认是 column ，item会按照主轴方向排列。</p>
</li>
<li><p>flexWrap: ‘ warp ‘ | ‘ nowrap ’<br>flexbox 会默认将所有元素基于一行，这个属性表示是否折行。</p>
</li>
<li><p>alignItems: ‘ flex-start ’ | ’ flex-end ’ | ’ center ’ | ‘ stretch ‘<br>表示item在 cross axis 上的对齐方式，基于cross axis的顶部｜基于cross axis的底部｜基于cross axis的中部｜布满整个。</p>
</li>
<li><p>justifyContent: ‘ flex-start ’ | ‘ flex-end ‘ | ‘ center ‘ | ‘ space-between ‘ | ’space-around’<br>表示item在 main axis 上的对齐方式，基于主轴开始｜基于主轴结束｜居中｜左右两边对齐，item间隔相等｜每个item两端间隔相等。</p>
</li>
</ul>
<h2 id="item的属性">item的属性</h2><ul>
<li><p>flex: num<br>item 所占的比例大小。</p>
</li>
<li><p>alignSelf:‘ flex-start ’ | ’ flex-end ’ | ’ center ’ | ‘ stretch ‘<br>它允许项目中当个item和其他itemsyou不一样的对齐方式，会覆盖alignitems的属性。</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="tip:">tip:</h1><p>这是一篇学习 React-Native for Android 的学习笔记，主要上其实是看官方的文档来自己学习 RN，目前的主要是学习android的开发。</p>
<p>😏😏😏😏😏😏😏😏😏😏😏😏😏😏]]>
    </summary>
    
      <category term="FE" scheme="http://qiutc.me/tags/FE/"/>
    
      <category term="React-Native" scheme="http://qiutc.me/tags/React-Native/"/>
    
      <category term="learning notes" scheme="http://qiutc.me/tags/learning-notes/"/>
    
      <category term="React-Native" scheme="http://qiutc.me/categories/React-Native/"/>
    
      <category term="learning notes" scheme="http://qiutc.me/categories/React-Native/learning-notes/"/>
    
      <category term="FE" scheme="http://qiutc.me/categories/React-Native/learning-notes/FE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[RN]1.环境搭建--React-Native learning notes]]></title>
    <link href="http://qiutc.me/post/RN-1-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-React-Native-learning-notes.html"/>
    <id>http://qiutc.me/post/RN-1-环境搭建-React-Native-learning-notes.html</id>
    <published>2015-11-21T12:57:35.000Z</published>
    <updated>2015-11-21T14:26:48.000Z</updated>
    <content type="html"><![CDATA[<h1 id="tip:">tip:</h1><p>这是一篇学习 React-Native for Android 的学习笔记，主要上其实是看官方的文档来自己学习 RN，目前的主要是学习android的开发。</p>
<h1 id="React-Native_for_Android_的环境搭建">React-Native for Android 的环境搭建</h1><h3 id="要求：">要求：</h3><ol>
<li>前提 OS X (假设大家有用Mac了😏ß);</li>
<li><a href="http://brew.sh/" target="_blank" rel="external">Homebrew</a> (包管理器)(用来安装Watchman 和 Flow);</li>
<li>安装<a href="https://nodejs.org/" target="_blank" rel="external">node.js</a> 4.0 或者以上;</li>
<li>安装 watchman(文件监控) ,在命令行: <code>brew install watchman</code>;</li>
<li>安装 flow ,在命令行: <code>brew install flow</code>;</li>
<li>安装最新的 <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">JDK</a>;</li>
<li>安装 SDK ,在命令行: <code>brew install android-idk</code>;</li>
<li>配置 android 环境:<br>在 ~/.bashrc, ~/.bash_profile写入<br>  <code>export ANDROID_HOME=/usr/local/opt/android-sdk</code>;<br>(在这一步可以先到~目录下，然后如果没有.bashrc，就创建一个，然后vim .bashrc，然后写入上面代码，按esc键，输入<code>:wq</code>，然后自动保存退出，.bash_profile同理);</li>
<li>配置 SDK:<br>新开一个shell窗口：运行 <code>android</code>,<br>会弹出 Android SDK Manager窗口，<br>安装下列选项:<br><img src="/img/RN_img_1.png" alt=""><br><img src="/img/RN_img_2.png" alt=""><br>(tip: 这一步可能需要翻墙);</li>
<li>安装 <a href="https://www.genymotion.com/#!/download/freemium/mac/classical" target="_blank" rel="external">Genymotion</a> (android 的模拟器,推荐使用这个吧);</li>
<li>安装react native 的命令行工具包,在命令行: <code>npm install -g react-native-cli</code>;</li>
<li>命令行进入需要创建的文件夹目录下: <code>react-native init AwesomeProject</code>，会自动获取下载react native的包（建议翻墙）;</li>
<li><p>项目的目录结构如下：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="tag">android</span>           <span class="id">#android</span>需要的文件夹</span><br><span class="line">├── <span class="tag">ios</span>               <span class="id">#ios</span>需要的文件夹</span><br><span class="line">├── <span class="tag">node_modules</span>      <span class="id">#npm</span>包文件夹</span><br><span class="line">├── <span class="tag">index</span><span class="class">.android</span><span class="class">.js</span>  <span class="id">#android</span>应用的入口<span class="tag">js</span>文件</span><br><span class="line">├── <span class="tag">index</span><span class="class">.ios</span><span class="class">.js</span>      <span class="id">#ios</span>应用的入口<span class="tag">js</span>文件</span><br><span class="line">└── <span class="tag">package</span><span class="class">.json</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>打开Genymotion,下载安装最新的android模拟器，打开;</p>
</li>
<li>在文件夹下运行命令行: <code>react-native run-android</code>,等待安装，<br>然后android的模拟器就会出现：<br><img src="/img/RN_img_3.png" alt=""><br>ß<h2 id="完成！">完成！</h2></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="tip:">tip:</h1><p>这是一篇学习 React-Native for Android 的学习笔记，主要上其实是看官方的文档来自己学习 RN，目前的主要是学习android的开发。</p>
<h1 id="React-Native_for_Androi]]>
    </summary>
    
      <category term="FE" scheme="http://qiutc.me/tags/FE/"/>
    
      <category term="React-Native" scheme="http://qiutc.me/tags/React-Native/"/>
    
      <category term="learning notes" scheme="http://qiutc.me/tags/learning-notes/"/>
    
      <category term="React-Native" scheme="http://qiutc.me/categories/React-Native/"/>
    
      <category term="learning notes" scheme="http://qiutc.me/categories/React-Native/learning-notes/"/>
    
      <category term="FE" scheme="http://qiutc.me/categories/React-Native/learning-notes/FE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何使用webpack—webpack-howto]]></title>
    <link href="http://qiutc.me/post/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8webpack%E2%80%94webpack-howto.html"/>
    <id>http://qiutc.me/post/如何使用webpack—webpack-howto.html</id>
    <published>2015-10-21T02:58:10.000Z</published>
    <updated>2015-10-29T10:52:54.000Z</updated>
    <content type="html"><![CDATA[<h1 id="如何使用webpack">如何使用webpack</h1><p>本文章翻译自petehunt的webpack-howto教程，<a href="https://github.com/petehunt/webpack-howto" target="_blank" rel="external">原地址https://github.com/petehunt/webpack-howto</a>，还有源码。</p>
<h2 id="本教程的目标">本教程的目标</h2><p>这是一本如何使用webpack来处理代码的“烹饪书”，它包括了我们在Instagram用的大多数东西以及我们还没在项目中用到过的。<br>我（作者）的建议：把这本书作为你学习webpack文档的开端，然后配合看官方文档的说明。</p>
<h2 id="预备知识">预备知识</h2><ul>
<li>你了解browserify，ReqiureJs或者其他类似的东西。</li>
<li>你明白这些东西的价值：<ul>
<li>打包分离</li>
<li>异步加载</li>
<li>打包静态资源，比如图片和CSS</li>
</ul>
</li>
</ul>
<h2 id="1-为什么使用webpack？">1.为什么使用webpack？</h2><ul>
<li><strong>他类似browserify</strong> 但是可以把你的应用分离成许多文件，如果你有许多页面在你的单页应用里面，用户只需要下载当前页面所需要的代码。如果你跳转到另一个页面，他们不需要重新加载通用的代码。</li>
<li><strong>他能替代grunt或者gulp大部分的功能</strong> 因为他可以构建和打包CSS，预处理CSS，编译JS和打包处理图片，甚至更多事情。<br>他支持AMD和CommonJs以及其他的模块化系统（Angular，ES6）。如果你不知道用什么，那么可以用CommonJs。</li>
</ul>
<h2 id="2-给用browserify的人">2.给用browserify的人</h2><p>下面的代码是等价的：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">browserify</span> <span class="tag">main</span><span class="class">.js</span> &gt; <span class="tag">bundle</span><span class="class">.js</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">webpack</span> <span class="tag">main</span><span class="class">.js</span> <span class="tag">bundle</span><span class="class">.js</span></span><br></pre></td></tr></table></figure>
<p>然而，webpack比browserify更加强大，你可能会更愿意去编写一个<code>webpack.config.js</code>来合理地组织你的项目：<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="module"><span class="keyword">module</span>.exports = </span>&#123;</span><br><span class="line">    entry: <span class="string">'./main.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>这就是JS，所以你可以很轻松地在这个文件里编写代码。</p>
<h2 id="3-如何调用webpack？">3.如何调用webpack？</h2><p>切换带包含webpack.config.js的目录然后在命令行运行：</p>
<ul>
<li><code>webpack</code> 执行一次开发时的编译</li>
<li><code>webpack -p</code> 执行一次生成环境的编译（压缩）</li>
<li><code>webpack --watch</code> 在开发时持续监控增量编译（很快）</li>
<li><code>webpack -d</code> 让他生成SourceMaps</li>
</ul>
<h2 id="编译JS语言">编译JS语言</h2><p>webpack和browserify一样能转化（transforms）的RequireJs插件是一个加载器（loader）<br>你能让webpack加载CoffeeScript和Facebook的JSX+ES6支持（你必须先 <code>npm install babel-loader coffee-loader</code>）:<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line">module.exports = &#123;</span><br><span class="line"><span class="label">    entry:</span> <span class="string">'./main.js'</span>,</span><br><span class="line"><span class="label">    output:</span> &#123;</span><br><span class="line"><span class="label">        filename:</span> <span class="string">'bundle,js'</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="label">    module:</span> &#123;</span><br><span class="line"><span class="label">        loader:</span> [</span><br><span class="line">            &#123; <span class="string">test:</span> <span class="regexp">/\.coffee$/</span>, <span class="string">loader:</span> <span class="string">'coffee-loader'</span> &#125;,</span><br><span class="line">            &#123; <span class="string">test:</span> <span class="regexp">/\.js$/</span>, <span class="string">loader:</span> <span class="string">'bebel-loader'</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>为了开启后缀名的自动补全，你需要添加<code>resolve.extensions</code>参数来指定哪些文件是webpack需要搜索的：<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> webpack.config.js</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attribute">entry</span>: <span class="string">'./main.js'</span>,</span><br><span class="line">    <span class="attribute">output</span>: &#123;</span><br><span class="line">        <span class="attribute">filename</span>: <span class="string">'bundle,js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attribute">module</span>: &#123;</span><br><span class="line">        <span class="attribute">loader</span>: [</span><br><span class="line">            &#123; <span class="attribute">test</span>: <span class="regexp">/\.coffee$/</span>, <span class="attribute">loader</span>: <span class="string">'coffee-loader'</span> &#125;,</span><br><span class="line">            &#123; <span class="attribute">test</span>: <span class="regexp">/\.js$/</span>, <span class="attribute">loader</span>: <span class="string">'bebel-loader'</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attribute">resolve</span>: &#123;</span><br><span class="line">        <span class="regexp">//</span> 你现在可以使用 `<span class="javascript"></span>`<span class="built_in">require</span>(<span class="string">'file'</span>)`<span class="javascript"></span>` 来代替 `<span class="javascript"></span>`<span class="built_in">require</span>(<span class="string">'file.coffee'</span>)`<span class="javascript"></span>` 。</span><br><span class="line">        <span class="attribute">extensions</span>: [<span class="string">''</span>, <span class="string">'.js'</span>, <span class="string">'.json'</span>, <span class="string">'.coffee'</span>, <span class="string">'.jsx'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h2 id="5-样式和图片">5.样式和图片</h2><p>首先你需要更新你的代码去请求 <code>require()</code> 你的静态资源（命名和他们在node里面使用 <code>require()</code> 一样）。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">'./bootstrap.css'</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">'./myapp.less'</span>);</span><br><span class="line"><span class="keyword">var</span> img = <span class="built_in">document</span>.createElement(<span class="string">'img'</span>);</span><br><span class="line">img.src = <span class="built_in">require</span>(<span class="string">'./glyph.png'</span>);</span><br></pre></td></tr></table></figure></p>
<p>当你请求CSS（或者less或者其他）的时候，webpack会把CSS像字符串一样内联到JS包里面，require（）会在页面插入一个style标签。<br>当你请求图片时，webpack会内联一个图片的URL链接到你的代码包然后通过<code>require()</code>返回。<br>但是你需要去教webpack去做这件事（再次重复，用loaders）：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line">module.exports = &#123;</span><br><span class="line"><span class="label">  entry:</span> <span class="string">'./main.js'</span>,</span><br><span class="line"><span class="label">  output:</span> &#123;</span><br><span class="line"><span class="label">    path:</span> <span class="string">'./build'</span>, <span class="comment">// 图片和js会被打包到这个目录</span></span><br><span class="line"><span class="label">    publicPath:</span> <span class="string">'http://mycdn.com/'</span>, <span class="comment">// 这个是用来生成图片地址的URL</span></span><br><span class="line"><span class="label">    filename:</span> <span class="string">'bundle.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="label">  module:</span> &#123;</span><br><span class="line"><span class="label">    loaders:</span> [</span><br><span class="line">      &#123; <span class="string">test:</span> <span class="regexp">/\.less$/</span>, <span class="string">loader:</span> <span class="string">'style-loader!css-loader!less-loader'</span> &#125;, <span class="comment">// 使用 ! 来链接多个loader</span></span><br><span class="line">      &#123; <span class="string">test:</span> <span class="regexp">/\.css$/</span>, <span class="string">loader:</span> <span class="string">'style-loader!css-loader'</span> &#125;,</span><br><span class="line">      &#123;<span class="string">test:</span> <span class="regexp">/\.(png|jpg)$/</span>, <span class="string">loader:</span> <span class="string">'url-loader?limit=8192'</span>&#125; <span class="comment">// 内联小于8k的base64图片，其他的直接使用URL</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h2 id="6-功能标志">6.功能标志</h2><p>有些代码可能我们只想要在生产环境下运行（比如日志logging）和我们内部的测试调试服务器（就像我们的测试人员在测试应用），可以在你的代码引入全局环境变量。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(__DEV__) &#123;</span><br><span class="line">    <span class="built_in">console</span>.warn(<span class="string">'Extra logging'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">if</span>(__PRERELEASE__) &#123;</span><br><span class="line">    showSecretFeature();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这会教webpack这些奇特的全局环境：<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// definePlugin 接收字符串插入到代码当中, 所以你需要的话可以写上 JS 的字符串.</span></span><br><span class="line"><span class="keyword">var</span> definePlugin = <span class="keyword">new</span> webpack.DefinePlugin(&#123;</span><br><span class="line">  __DEV__: <span class="built_in">JSON</span>.stringify(<span class="built_in">JSON</span>.parse(process.env.BUILD_DEV || <span class="string">'true'</span>)),</span><br><span class="line">  __PRERELEASE__: <span class="built_in">JSON</span>.stringify(<span class="built_in">JSON</span>.parse(process.env.BUILD_PRERELEASE || <span class="string">'false'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="module"><span class="keyword">module</span>.exports = </span>&#123;</span><br><span class="line">  entry: <span class="string">'./main.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'bundle.js'</span>       </span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [definePlugin]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>你可以在控制台里执行 <code>BUILD_DEV=1 BUILD_PRERELEASE=1 webpack</code> .<br>注意：<code>webpack -p</code>会丑化并且剔除死代码，然和包含在里面的代码都会被剔除掉，这样你就不用担心泄露秘密咯~</p>
<h2 id="7-多重入口">7.多重入口</h2><p>比如说你有一个profile和一个feed页面，你不想让用户在只想要profile页面的时候下载feed页面的代码，所以你可以创建多个包，每个页面都有一个”main module”。<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="module"><span class="keyword">module</span>.exports = </span>&#123;</span><br><span class="line">  entry: &#123;</span><br><span class="line">    Profile: <span class="string">'./profile.js'</span>,</span><br><span class="line">    Feed: <span class="string">'./feed.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: <span class="string">'build'</span>,</span><br><span class="line">    filename: <span class="string">'[name].js'</span> <span class="comment">// 模板基于上面入口文件的key</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>在profile页面，插入 <code>&lt;script src=&quot;build/Profile.js&quot;&gt;&lt;/script&gt;</code> .feed页面也会这样。</p>
<h2 id="8-优化通用代码">8.优化通用代码</h2><p>feed和profile页面共享许多通用的代码（比如React和公用样式和组件）。<br>webpack可以计算出哪些代码是它们公用的然后生成一个共享的包然后在页面之间被缓存。<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> commonsPlugin =</span><br><span class="line">  <span class="keyword">new</span> webpack.optimize.CommonsChunkPlugin(<span class="string">'common.js'</span>);</span><br><span class="line"></span><br><span class="line"><span class="module"><span class="keyword">module</span>.exports = </span>&#123;</span><br><span class="line">  entry: &#123;</span><br><span class="line">    Profile: <span class="string">'./profile.js'</span>,</span><br><span class="line">    Feed: <span class="string">'./feed.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: <span class="string">'build'</span>,</span><br><span class="line">    filename: <span class="string">'[name].js'</span> <span class="comment">// Template based on keys in entry above</span></span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [commonsPlugin]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>在script标签添加之前添加 <code>&lt;script src=&quot;build/common.js&quot;&gt;&lt;/script&gt;</code> 就可以使用缓存啦~</p>
<h2 id="9-异步加载">9.异步加载</h2><p>CommonJs是同步加载的，但是webpack提供了一个方法可以异步加载指定的依赖项。<br>这对于客户端的路由是很有用的，每一个页面都需要路由，但是在某个功能被用到之前你不会想去下载这部分代码的。<br>在你想要异步加载的地方指定分离点，比如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.location.pathname === <span class="string">'/feed'</span>) &#123;</span><br><span class="line">  showLoadingState();</span><br><span class="line">  <span class="built_in">require</span>.ensure([], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 这个语法很怪异但是他能执行</span></span><br><span class="line">    hideLoadingState();</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">'./feed'</span>).show(); <span class="comment">// 当这个函数被调用的时候, 这个模块时可以同步的。</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.location.pathname === <span class="string">'/profile'</span>) &#123;</span><br><span class="line">  showLoadingState();</span><br><span class="line">  <span class="built_in">require</span>.ensure([], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    hideLoadingState();</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">'./profile'</span>).show();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>webpack会做剩下的事情并且生成额外的包然后给你加载。<br>webpack在html的script标签加载时会假设这些文件是在你的根目录下的，比如，你可以使用 <code>output.publicPath来配置他</code><br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="tag">output</span>: &#123;</span><br><span class="line">    <span class="attribute">path</span>: <span class="string">"/home/proj/public/assets"</span>, <span class="comment">//path指向你编译时的文件目录</span></span><br><span class="line">    <span class="attribute">publicPath</span>: <span class="string">"/assets/"</span> <span class="comment">//publicPath指向你引用文件是考虑的地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="其他资源">其他资源</h1><p>可以看一看一个成功的团队如何在真实项目中使用webpack：<a href="http://youtu.be/VkTCL6Nqm6Y" target="_blank" rel="external">http://youtu.be/VkTCL6Nqm6Y</a><br>这是Pete Hunt 在OSCon大会上说的关于webpack在Instagram.com中的使用。</p>
<h1 id="FAQ">FAQ</h1><p><strong>webpack不像模块化？</strong><br>webpack非常的模块化。他能让插件自身集成到编译过程中的许多地方相比于browserify和requireJs.<br>许多看起来是在被编写在核心代码中的功能实际上是被默认加载的插件，他们可以被覆盖。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="如何使用webpack">如何使用webpack</h1><p>本文章翻译自petehunt的webpack-howto教程，<a href="https://github.com/petehunt/webpack-howto" target="_blank" r]]>
    </summary>
    
      <category term="webpack" scheme="http://qiutc.me/tags/webpack/"/>
    
      <category term="前端" scheme="http://qiutc.me/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="教程" scheme="http://qiutc.me/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="翻译" scheme="http://qiutc.me/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="前端" scheme="http://qiutc.me/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="教程" scheme="http://qiutc.me/categories/%E5%89%8D%E7%AB%AF/%E6%95%99%E7%A8%8B/"/>
    
      <category term="webpack" scheme="http://qiutc.me/categories/%E5%89%8D%E7%AB%AF/%E6%95%99%E7%A8%8B/webpack/"/>
    
      <category term="翻译" scheme="http://qiutc.me/categories/%E5%89%8D%E7%AB%AF/%E6%95%99%E7%A8%8B/webpack/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS 伪类before/after content内容生成技术----纯CSS实现tooltip]]></title>
    <link href="http://qiutc.me/post/CSS-%E4%BC%AA%E7%B1%BBbefore-after-content%E5%86%85%E5%AE%B9%E7%94%9F%E6%88%90%E6%8A%80%E6%9C%AF-%E7%BA%AFCSS%E5%AE%9E%E7%8E%B0tooltip.html"/>
    <id>http://qiutc.me/post/CSS-伪类before-after-content内容生成技术-纯CSS实现tooltip.html</id>
    <published>2015-10-17T07:30:41.000Z</published>
    <updated>2015-10-17T07:56:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="一、介绍before/after">一、介绍before/after</h1><p>CSS中的before和after伪类选择器早在CSS2时就被引入，改属性被所有主流浏览器所支持了。<br>before和after顾名思义，分别指的是伪元素在元素前/后添加内容，默认他们是display是inline，但是可以使用CSS设置为block。<br>应用before/和after也比较简单，举个例子：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">a</span><span class="pseudo">:after</span> <span class="rules">&#123;</span><br><span class="line">      <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">" after "</span></span></span>;</span><br><span class="line">      <span class="rule"><span class="attribute">display</span>:<span class="value">  block</span></span>;</span><br><span class="line">      <span class="rule"><span class="attribute">coloe</span>:<span class="value"> red</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>可以在浏览器看到，a标签元素后面多出了一段文字 after。（在CSS3中伪类元素使用是如a::after的，不过目前两者并无多大区别）。<br>（伪元素不可通过DOM使用，IE6/7对该属性不支持）</p>
<p>after和before伪元素有许多用处，还可以简化代码，比如可以写一个计数器、tip小三角形、清除浮动……特别在CSS3中新加的一些属性更是丰富了它的应用，这里有个小教程，用before/after伪元素来实现一个纯CSS3的tooltip。</p>
<h1 id="二、tooltip实现教程">二、tooltip实现教程</h1><p>这里我们主要是用草after/before伪元素content中的attr属性，先来看看实现后的样子：</p>
<h2 id="1-实现样式">1.实现样式</h2><p><img src="/img/after&amp;before-demo.png" alt="DEMO"></p>
<h2 id="2-代码">2.代码</h2><p>鼠标hover button之后，出现一个tooltip小标签。<br>代码先贴上：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">lang</span>=<span class="value">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>demo<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"></span><br><span class="line">        <span class="class">.btn</span> <span class="rules">&#123;</span><br><span class="line">            <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">200px</span> auto</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">200px</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">10px</span> <span class="number">20px</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">20px</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#6bdf4e</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#6bdf4e</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">cursor</span>:<span class="value"> pointer</span></span>;</span><br><span class="line">        &#125;</span></span><br><span class="line">        <span class="class">.btn</span><span class="pseudo">::after</span> <span class="rules">&#123;</span><br><span class="line">            <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="function">attr</span>(data-tip)</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">display</span>:<span class="value"> none</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">5px</span> <span class="number">10px</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">50%</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">bottom</span>:<span class="value"> <span class="number">100%</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">margin-bottom</span>:<span class="value"> <span class="number">12px</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translateX</span>(-<span class="number">50%</span>)</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">16px</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#000</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">cursor</span>:<span class="value"> default</span></span>;</span><br><span class="line">        &#125;</span></span><br><span class="line">        <span class="class">.btn</span><span class="pseudo">::before</span> <span class="rules">&#123;</span><br><span class="line">            <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">" "</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">display</span>:<span class="value"> none</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">50%</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">bottom</span>:<span class="value"> <span class="number">100%</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translateX</span>(-<span class="number">50%</span>)</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">margin-bottom</span>:<span class="value"> <span class="number">3px</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">border-left</span>:<span class="value"> <span class="number">6px</span> solid transparent</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">border-right</span>:<span class="value"> <span class="number">6px</span> solid transparent</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">border-top</span>:<span class="value"> <span class="number">9px</span> solid <span class="hexcolor">#000</span></span></span>;</span><br><span class="line">        &#125;</span></span><br><span class="line">        <span class="class">.btn</span><span class="pseudo">:hover</span><span class="pseudo">::after</span>,</span><br><span class="line">        <span class="class">.btn</span><span class="pseudo">:hover</span><span class="pseudo">::before</span> <span class="rules">&#123;</span><br><span class="line">            <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;</span><br><span class="line">        &#125;</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">button</span> <span class="attribute">class</span>=<span class="value">"btn"</span> <span class="attribute">data-tip</span>=<span class="value">"ToolTip"</span>&gt;</span>button<span class="tag">&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3-实现过程">3.实现过程</h2><ul>
<li>一. 创建一个标签，然后在标签内加上一个属性 data-[] = “ToolTip”,[]表示的是自定义的属性名称，引号里面是tooltip需要显示的内容。</li>
<li>二. 给标签加样式，position设置为relative，因为之后伪元素需要设置绝对定位来设置位置。</li>
<li>三. 给after加样式，after是需要显示的tooltip，通过content: attr(data-tip);拿到需要显示的内容，设置绝对定位，调整位置。</li>
<li>四. 给before加样式，before需要设置成一个小三角tip放在after下面。</li>
<li>五. 给after/before的display都设置为none。</li>
<li>六. 给需要tooltip的元素伪类选择hover时设置after/before的display为block，这里需要注意的是after/before默认display为inline，所以我们前面创建调试是display应该先设置为block。</li>
<li>七. 打开浏览器查看效果~</li>
</ul>
<h1 id="三、对于不支持伪元素的IE6/7">三、对于不支持伪元素的IE6/7</h1><p>解决方法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> $beforeAfter = <span class="function"><span class="keyword">function</span>(<span class="params">dom</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.querySelector || !dom &amp;&amp; dom.nodeType !== <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">var</span> content = dom.getAttribute(<span class="string">"data-content"</span>) || <span class="string">''</span>;     </span><br><span class="line">    <span class="keyword">var</span> before = <span class="built_in">document</span>.createElement(<span class="string">"before"</span>)</span><br><span class="line">        , after = <span class="built_in">document</span>.createElement(<span class="string">"after"</span>);</span><br><span class="line">    before.innerHTML = content;</span><br><span class="line">    after.innerHTML = content;</span><br><span class="line">    dom.insertBefore(before, dom.firstChild);</span><br><span class="line">    dom.appendChild(after);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h1 id="四、tip">四、tip</h1><p>关于after/before还有许多有趣有用的用法，感兴趣的同学可以研究研究哦~</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、介绍before/after">一、介绍before/after</h1><p>CSS中的before和after伪类选择器早在CSS2时就被引入，改属性被所有主流浏览器所支持了。<br>before和after顾名思义，分别指的是伪元素在元素前/后添加内容，]]>
    </summary>
    
      <category term="CSS" scheme="http://qiutc.me/tags/CSS/"/>
    
      <category term="前端" scheme="http://qiutc.me/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="教程" scheme="http://qiutc.me/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="前端" scheme="http://qiutc.me/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="教程" scheme="http://qiutc.me/categories/%E5%89%8D%E7%AB%AF/%E6%95%99%E7%A8%8B/"/>
    
      <category term="CSS" scheme="http://qiutc.me/categories/%E5%89%8D%E7%AB%AF/%E6%95%99%E7%A8%8B/CSS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AARRR运营模型]]></title>
    <link href="http://qiutc.me/post/AARRR%E8%BF%90%E8%90%A5%E6%A8%A1%E5%9E%8B.html"/>
    <id>http://qiutc.me/post/AARRR运营模型.html</id>
    <published>2015-10-14T03:28:09.000Z</published>
    <updated>2015-11-12T09:09:52.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前提：">前提：</h1><p>目前许多产品认为只要推广了1，获取大量用户流量，只看重下载量和激活量，以此来衡量一个产品，出现了“重推广，轻运营”的情况。然而何为留存率，是用户下载了APP并且打开甚至注册了吗？不，下载了不一定会继续使用留存，何时留存？当产品满足甚至超出用户期望，产品核心定位人群瞄准该用户，用户有再次打开使用时才是留存率。<br><br><br>AARRR运营模型更加的符合当前移动APP的运营模式。何为AARRR，下面一张图给出大概的结构：<br><img src="/img/aarrr.png" alt="AARRR"></p>
<hr>
<h1 id="何为AARRR模型？">何为AARRR模型？</h1><p>简单来讲，AARRR模型分为  Acquisition（推广）、activation（提高活跃度）、retention（提高留存）、revenue（获取收入）、refer（自传播）。</p>
<h2 id="1-_推广（Acquisition）">1. 推广（Acquisition）</h2><p>这是一款产品推出的第一步，把产品推广出去，获取用户量，没有用户用何运营。目前一款APP推广主要有这些渠道：各大应用商店、论坛帖吧、RP、刷机预装、线下推广扫码等、……<br>在这个阶段，最初大家关心的数据是下载量，然而下载了不一定安装，安装了不一定激活，激活了不一定留存。在推广的时候应该分渠道分析数据，一款产品不会符合所有人的需求和兴趣的，只有分析产品本身和数据，找到合适的目标人群，有针对性的推广，才能获取到高质量的用户。从另一方面来说，获取用户也是需要成本的，之后会在第四个环节revenue来说明，应该做的是找准产品的目标人群，选择最合适的推广渠道，获取高质量用户，个人观点认同“流量经济已过、之后的趋势是粉丝经济”。</p>
<h2 id="2-提高活跃度（Activation）">2.提高活跃度（Activation）</h2><p>在第一步的时候获取用户的渠道许许多多，许多用户并不是主动获取的，针对自己的产品选择适合的推广渠道前面已经说明过了。<br>衡量活跃度我们可能马上想到的就是 DAU（日活跃用户）、MAU（月活跃用户）。这两个也是运营人员必看的指标，注意的是还是需要根据自身产品来选择合适的用户指标。<br>对一个产品来说，往往用户第一次使用的前几十秒觉得了用户是否感兴趣。<br>提高活跃度主要有一下方法：</p>
<ul>
<li>（1）产品本身设计时需要考虑：通过签到、每日任务、每日推送等等方法来诱导用户周期性使用，当然产品本身也是需要做好，用户才会有兴趣。</li>
<li>（2）有规律的版本更新：每一次有效的版本更新都会刺激活跃用户。</li>
<li>（3）Notification :使用Notification 也需要小心，选择合适的内容、选择合适的频率、选择合适的时段。</li>
</ul>
<h2 id="3-提高留存（retention）">3.提高留存（retention）</h2><p> 一款应用的生命周期如下：渠道–点击–下载–安装–激活–留存–卸载<br> 如何提高生命周期、提高用户使用价值主要靠提高留存。<br> 保留一个老用户的成本远远要低于获取一个新用户的成本，获取用户之后需要做的是分析用户数据，提高留存率。有些产品不分析用户为何流失，另一方面却又一直不断开拓新用户，造成了用户大量流失，运营成本大大增加的情况。</p>
<h2 id="4-获取收入（revenue）">4.获取收入（revenue）</h2><p>收入是应用运营最核心的一点，产品的收入方式主要：付费应用、应用内付费、广告、渠道手续费获利….。付费应用在国内不大现实，毕竟没有这样的用户习惯，应用内付费大多出现在游戏应用，主要要做的是设计产品的时候就应该设计好盈利模式，运营时把用户最大化转化为价值。收入还和CAC（用户获取成本）大大关联，利润=收入-成本，成本来说除掉开发成本等等其实主要大头就是CAC了，如何平衡CAC和用户实际带来的成本需要最大化用户的价值。</p>
<h2 id="5-自传播（refer）">5.自传播（refer）</h2><p> 随着移动社交网络的兴起，自传播成为运营的一大方面，基于移动社交网络的病毒式营销，用户自驱动的传播推广产品，二次获取用户，把AARRR的金字塔陀螺式的上升增长，把运营提高到更高的一个层次。利用用户邀请新用户，用户在自己的社交圈内推广产品，二次获取新用户。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前提：">前提：</h1><p>目前许多产品认为只要推广了1，获取大量用户流量，只看重下载量和激活量，以此来衡量一个产品，出现了“重推广，轻运营”的情况。然而何为留存率，是用户下载了APP并且打开甚至注册了吗？不，下载了不一定会继续使用留存，何时留存？当产品满足甚]]>
    </summary>
    
      <category term="产品" scheme="http://qiutc.me/tags/%E4%BA%A7%E5%93%81/"/>
    
      <category term="运营" scheme="http://qiutc.me/tags/%E8%BF%90%E8%90%A5/"/>
    
      <category term="产品" scheme="http://qiutc.me/categories/%E4%BA%A7%E5%93%81/"/>
    
      <category term="运营" scheme="http://qiutc.me/categories/%E4%BA%A7%E5%93%81/%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用hexo+github搭建静态博客]]></title>
    <link href="http://qiutc.me/post/%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2.html"/>
    <id>http://qiutc.me/post/使用hexo-github搭建静态博客.html</id>
    <published>2015-10-04T03:01:31.000Z</published>
    <updated>2015-10-14T03:25:50.000Z</updated>
    <content type="html"><![CDATA[<h1 id="认识hexo">认识hexo</h1><p>&#8195;&#8195;hexo是一款基于Node.js的静态博客框架，可以生成静态文件并且一键部署到github pages上，并且他可以使用markdown来编写文章，十分简单。</p>
<p>他有许多优点：</p>
<ul>
<li>快速：hexo基于Node.js，支持多进程，几百篇文章可以秒生成。</li>
<li>写文章流程：支持GitHub Flavored Markdown和所有Octopress的插件。</li>
<li>扩展性：Hexo支持EJS、Swig和Stylus。通过插件支持Haml、Jade和Less。</li>
</ul>
<p><em>这是一篇用hexo在github上面搭建博客的教程</em></p>
<hr>
<h1 id="安装：">安装：</h1><h2 id="系统环境：">系统环境：</h2><ul>
<li>系统： win10 64bit</li>
<li>编译器：<a href="http://www.sublimetext.com/" target="_blank" rel="external">sublime text 3</a>（可以看这篇文章）</li>
<li>编码： 把文本编码确定成 UTF-8</li>
</ul>
<h2 id="Git">Git</h2><ol>
<li>可以选择安装GitHub for Windows 或者 git 。</li>
<li>注册github，选择Repositories，然后new新建一个仓库，建好仓库之后选择settings，到GitHub Pages那一栏，选择Launch automatic page generator，接下去就是确定。</li>
<li>然后就是把仓库clone下来，关于怎么clone和使用git可以参考这篇文字。</li>
</ol>
<h2 id="nodejs">nodejs</h2><p>下载安装<a href="https://nodejs.org/" target="_blank" rel="external">nodejs</a>，nodejs安装后会自动带有npm包，如果嫌外网下npm下载包文件比较慢，可以使用淘宝的<a href="http://npm.taobao.org/" target="_blank" rel="external">cnpm</a>镜像。<br>nodejs安装好之后可以打开命令行（win+r，输入cmd，确定），<br>输入 node -v 查看nodejs版本：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ v0.<span class="number">12.7</span> <span class="comment">##版本号</span></span><br></pre></td></tr></table></figure></p>
<p>输入 npm -v 查看npm版本：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm -v</span><br><span class="line">$ v2.<span class="number">11.3</span> <span class="comment">##版本号</span></span><br></pre></td></tr></table></figure></p>
<p>到这里说明nodejs安装成功了。</p>
<h2 id="hexo">hexo</h2><p>打开命令行，我这里安装的是3.x版本（后面可能会有个小坑）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g <span class="operator">-d</span></span><br></pre></td></tr></table></figure></p>
<p>查看hexo的版本号：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure></p>
<p>进入到我们clone的那个文件夹，执行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></p>
<p>接着安装依赖包：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p>
<p>接着可以启动服务测试一下:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></p>
<p>用浏览器打开<code>http://localhost:4000/</code>或者<code>http://127.0.0.1:4000/</code>就可以看到页面了。</p>
<hr>
<h1 id="Hexo的使用">Hexo的使用</h1><h2 id="目录和文件">目录和文件</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── .deploy       <span class="preprocessor">#需要部署的文件</span></span><br><span class="line">├── node_modules  <span class="preprocessor">#Hexo插件</span></span><br><span class="line">├── <span class="keyword">public</span>        <span class="preprocessor">#生成的静态网页文件</span></span><br><span class="line">├── scaffolds     <span class="preprocessor">#模板</span></span><br><span class="line">├── source        <span class="preprocessor">#博客正文和其他源文件, <span class="number">404</span> 、favicon 、CNAME</span></span><br><span class="line">|   ├── _drafts   <span class="preprocessor">#草稿</span></span><br><span class="line">|   └── _posts    <span class="preprocessor">#文章</span></span><br><span class="line">├── themes        <span class="preprocessor">#主题</span></span><br><span class="line">├── _config.yml   <span class="preprocessor">#全局配置文件</span></span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure>
<p>（有些文件是在部署时才会产生的）</p>
<h2 id="全局站点配置文件_config-yml">全局站点配置文件_config.yml</h2><p>（yml语法严格，注意冒号后面必须加空格）<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># Site #站点信息</span></span><br><span class="line"><span class="label">title:</span> Hexo <span class="preprocessor">#博客标题</span></span><br><span class="line"><span class="label">subtitle:</span> 啦啦啦 <span class="preprocessor">#副标题</span></span><br><span class="line"><span class="label">description:</span> 哈哈哈 <span class="preprocessor">#描述</span></span><br><span class="line"><span class="label">author:</span> John Doe <span class="preprocessor">#作者</span></span><br><span class="line"><span class="label">language:</span> <span class="built_in">zh</span>-Hans <span class="preprocessor">#语言</span></span><br><span class="line"><span class="label">timezone:</span> Asia/Shanghai <span class="preprocessor">#时区</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># URL #链接格式</span></span><br><span class="line"><span class="label">url:</span> http://yoursite.com <span class="preprocessor">#博客网址</span></span><br><span class="line"><span class="label">root:</span> / <span class="preprocessor">#根目录</span></span><br><span class="line"><span class="label">permalink:</span> :year/:month/:day/:title/ <span class="preprocessor">#文章的链接格式</span></span><br><span class="line"><span class="label">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Directory #目录</span></span><br><span class="line"><span class="label">source_dir:</span> source <span class="preprocessor">#源文件</span></span><br><span class="line"><span class="label">public_dir:</span> public <span class="preprocessor">#生成的文件</span></span><br><span class="line"><span class="label">tag_dir:</span> tags <span class="preprocessor">#标签文件夹</span></span><br><span class="line"><span class="label">archive_dir:</span> archives <span class="preprocessor">#归档文件夹</span></span><br><span class="line"><span class="label">category_dir:</span> categories <span class="preprocessor">#分类文件夹</span></span><br><span class="line"><span class="label">code_dir:</span> downloads/code <span class="preprocessor">#下载文件</span></span><br><span class="line"><span class="label">i18n_dir:</span> :lang <span class="preprocessor">#国际化</span></span><br><span class="line"><span class="label">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Writing #写作</span></span><br><span class="line"><span class="label">new_post_name:</span> :title.md <span class="preprocessor">#文章标题</span></span><br><span class="line"><span class="label">default_layout:</span> post <span class="preprocessor">#模板</span></span><br><span class="line"><span class="label">titlecase:</span> false <span class="preprocessor">#标题是否换成小写</span></span><br><span class="line"><span class="label">external_link:</span> true <span class="preprocessor">#是否在新页面打开链接</span></span><br><span class="line"><span class="label">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="label">render_drafts:</span> false</span><br><span class="line"><span class="label">post_asset_folder:</span> false</span><br><span class="line"><span class="label">relative_link:</span> false</span><br><span class="line"><span class="label">future:</span> true</span><br><span class="line"><span class="label">highlight:</span></span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: true</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Category &amp; Tag #分类和标签</span></span><br><span class="line"><span class="label">default_category:</span> uncategorized</span><br><span class="line"><span class="label">category_map:</span></span><br><span class="line"><span class="label">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Date #时间日期格式</span></span><br><span class="line"><span class="label">date_format:</span> YYYY-MM-DD</span><br><span class="line"><span class="label">time_format:</span> HH:mm:ss</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Pagination #分页</span></span><br><span class="line"><span class="label">per_page:</span> <span class="number">10</span> <span class="preprocessor">#每页文章数</span></span><br><span class="line"><span class="label">pagination_dir:</span> page</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Extensions #插件和主题</span></span><br><span class="line"><span class="preprocessor">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="preprocessor">## Themes: http://hexo.io/themes/</span></span><br><span class="line"><span class="label">theme:</span> landscape</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Deployment #部署配置</span></span><br><span class="line"><span class="preprocessor">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="label">deploy:</span></span><br><span class="line">  type:</span><br></pre></td></tr></table></figure></p>
<h2 id="站点的_config-yml_配置">站点的_config.yml 配置</h2><h3 id="站点建立时间">站点建立时间</h3><p>例如 <code>© 2015 - 2016</code><br>在文件添加：<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">since</span>: <span class="string">2015</span></span><br></pre></td></tr></table></figure></p>
<h3 id="头像设置">头像设置</h3><p>/images/avatar.jpg //头像图片放置在主题的 source/images/<br>在文件添加：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">avatar:</span> <span class="regexp">/images/</span>avatar.png</span><br></pre></td></tr></table></figure></p>
<h3 id="侧边栏社交链接">侧边栏社交链接</h3><p>增加 social<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># Social links</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https:<span class="comment">//github.com/tongchengqiu</span></span><br><span class="line">  Twitter: https:<span class="comment">//twitter.com/tongchengqiu</span></span><br><span class="line">  Zhihu: http:<span class="comment">//www.zhihu.com/people/tongchengqiu</span></span><br></pre></td></tr></table></figure></p>
<h2 id="友情链接">友情链接</h2><h3 id="标题">标题</h3><p>links_title: 友情链接</p>
<h3 id="链接">链接</h3><p>links:<br>  Hexo: <a href="http://hexo.io/" target="_blank" rel="external">http://hexo.io/</a><br>  Lmintlcx: <a href="http://blog.lmintlcx.com/" target="_blank" rel="external">http://blog.lmintlcx.com/</a></p>
<h2 id="命令的使用">命令的使用</h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hexo help <span class="preprocessor">#查看帮助</span></span><br><span class="line">hexo init <span class="preprocessor">#初始化目录</span></span><br><span class="line">hexo <span class="keyword">new</span> <span class="string">"postName"</span> <span class="preprocessor">#新建文章</span></span><br><span class="line">hexo <span class="keyword">new</span> page <span class="string">"pageName"</span> <span class="preprocessor">#新建页面</span></span><br><span class="line">hexo generate <span class="preprocessor">#生成网页, 可以在public目录查看整个网站的文件</span></span><br><span class="line">hexo <span class="keyword">server</span> <span class="preprocessor">#本地预览,'Ctrl+C'关闭</span></span><br><span class="line">hexo deploy <span class="preprocessor">#部署.deploy目录</span></span><br><span class="line">hexo clean <span class="preprocessor">#清除缓存, 建议每次执行命令前先清理缓存</span></span><br><span class="line">hexo n == hexo <span class="keyword">new</span></span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo <span class="keyword">server</span></span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>
<h2 id="写文章">写文章</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"文章标题"</span></span><br></pre></td></tr></table></figure>
<p>然后到_post 目录下打开 文章标题.md<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">date: <span class="number">2015</span>-<span class="number">10</span>-<span class="number">3</span> <span class="number">11</span>:<span class="number">11</span>:<span class="number">11</span></span><br><span class="line">tags:</span><br><span class="line">- 标签<span class="number">1</span></span><br><span class="line">- 标签<span class="number">2</span></span><br><span class="line">- 标签<span class="number">3</span></span><br><span class="line">categories: [分类<span class="number">1</span>,分类<span class="number">2</span>,分类<span class="number">3</span>]</span><br><span class="line">---</span><br><span class="line">正文, 使用 Markdown 语法书写</span><br></pre></td></tr></table></figure></p>
<p>编辑后可以先预览<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> clean</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p>
<p>然后打开浏览器预览</p>
<h2 id="部署上传更新">部署上传更新</h2><p>以github为例，打开站点根目录下的_config.yml文件，找到deploy部分，更改配置<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repository</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:test/test.git #在仓库找到该仓库的ssh</span><br><span class="line">  <span class="attribute">branch</span>: github-pages #分支，这里为github-pages</span><br></pre></td></tr></table></figure></p>
<p>然后就可以部署了，在文件根目录执行命令行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></p>
<p>这里有可能会报个错误<code>ERROR Deployer not found : git</code><br>这里需要安装一个包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>
<p>然后就可以继续执行<code>deploy</code>了，第一次部署可能会有点慢，可以耐心等候哦。<br>成功之后可以继续打开仓库的settings，在GitHub Pages会看到 Your site is published at <a href="http://qiutongcheng.com.（如果还没有绑定域名就会是github给你分配的url哦）" target="_blank" rel="external">http://qiutongcheng.com.（如果还没有绑定域名就会是github给你分配的url哦）</a><br>就可以打开链接看看咯~</p>
<hr>
<h1 id="绑定域名">绑定域名</h1><p>当然我们的个人博客当然希望绑定自己的一个个性域名咯~</p>
<h2 id="注册购买顶级域名">注册购买顶级域名</h2><p>国内购买可以上<a href="http://wanwang.aliyun.com/" target="_blank" rel="external">万网</a>；<br>嫌国内不好可以用<a href="https://www.godaddy.com/" target="_blank" rel="external">godaddy</a>。</p>
<h2 id="DNS设置">DNS设置</h2><p>在购买域名的后台管理设置DNS<br>主机记录@, 类型A, 记录值192.30.252.153<br>主机记录www, 类型A, 记录值192.30.252.153</p>
<h2 id="在github绑定域名">在github绑定域名</h2><p>在source文件夹下面新建 CNAME（不要后缀），内容输入要绑定的域名，比如<br><code>qiutongcheng.com</code>或者<code>www.qiutongcheng.com</code>。</p>
<h2 id="绑定子域名">绑定子域名</h2><p>比如要绑定 <code>blog.qiutongcheng.com</code> ：<br>吧CNAME内容改成 <code>blog.qiutongcheng.com</code><br>DNS设置里面添加 主机记录有blog，类型 CNAME ，记录值 <code>blog.qiutongcheng.com</code></p>
<hr>
<h1 id="主题">主题</h1><p>hexo的<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">(主题列表)</a><br>我使用的是 NexT 主题，这里一NexT主题为例剖析一下吧。</p>
<h2 id="下载与使用">下载与使用</h2><p>执行命令行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next <span class="comment">#主题的地址</span></span><br></pre></td></tr></table></figure></p>
<p>也可以下载zip文件，然后手动解压到themes目录下<br>配置全局站点文件<code>_config.yml</code><br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">themes: <span class="keyword">next</span> <span class="preprocessor">#主题文件夹名</span></span><br></pre></td></tr></table></figure></p>
<h2 id="主题的目录结构">主题的目录结构</h2><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── languages          <span class="preprocessor">#国际化</span></span><br><span class="line">|   ├── <span class="keyword">default</span>.yml    <span class="preprocessor">#默认</span></span><br><span class="line">|   └── zh-CN.yml      <span class="preprocessor">#中文</span></span><br><span class="line">├── <span class="keyword">layout</span>             <span class="preprocessor">#布局</span></span><br><span class="line">|   ├── _partial       <span class="preprocessor">#局部的布局</span></span><br><span class="line">|   └── _widget        <span class="preprocessor">#小挂件的布局</span></span><br><span class="line">├── script             <span class="preprocessor">#js脚本</span></span><br><span class="line">├── source             <span class="preprocessor">#源代码文件</span></span><br><span class="line">|   ├── css            <span class="preprocessor">#CSS</span></span><br><span class="line">|   |   ├── _base      <span class="preprocessor">#基础CSS</span></span><br><span class="line">|   |   ├── _partial   <span class="preprocessor">#局部CSS</span></span><br><span class="line">|   |   ├── fonts      <span class="preprocessor">#字体</span></span><br><span class="line">|   |   ├── images     <span class="preprocessor">#图片</span></span><br><span class="line">|   |   └── style.styl <span class="preprocessor">#style.css</span></span><br><span class="line">|   ├── fancybox       <span class="preprocessor">#fancybox</span></span><br><span class="line">|   └── js             <span class="preprocessor">#js</span></span><br><span class="line">├── _config.yml        <span class="preprocessor">#主题配置文件</span></span><br><span class="line">└── README.md          <span class="preprocessor">#主题介绍</span></span><br></pre></td></tr></table></figure>
<h2 id="主题配置文件_config-yml文件">主题配置文件_config.yml文件</h2><p>打开主题目录下的_config.yml文件<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">menu: #菜单</span><br><span class="line">  home: / #首页</span><br><span class="line">  archives: /archives #归档</span><br><span class="line">  #commonweal: /<span class="number">404.</span>html #<span class="number">404</span>页面</span><br><span class="line">  #tags: /tags #标签</span><br><span class="line">  #categories: /categories #分类</span><br><span class="line">  about: /about #关于</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 小图标</span></span><br><span class="line">favicon: /favicon.ico</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 默认关键词</span></span><br><span class="line">keywords: <span class="string">"~"</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 留空使用默认的, false 禁用, 也可以写指定的地址</span></span><br><span class="line">rss:</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Icon fonts</span></span><br><span class="line"><span class="preprocessor"># default | linecons | fifty-shades | feather</span></span><br><span class="line">icon_font: <span class="keyword">default</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 代码高亮主题 https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line"><span class="preprocessor"># normal | night | night eighties | night blue | night bright</span></span><br><span class="line">highlight_theme: normal</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># MathJax Support #数学公式</span></span><br><span class="line">mathjax: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Schemes #启用主题中的主题Mist</span></span><br><span class="line">scheme: Mist</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 侧边栏</span></span><br><span class="line"><span class="preprocessor">#  - post    只在文章页面显示</span></span><br><span class="line"><span class="preprocessor">#  - always  所有页面显示</span></span><br><span class="line"><span class="preprocessor">#  - hide    隐藏</span></span><br><span class="line">sidebar: always</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 自动滚动到"阅读更多"标记的下面</span></span><br><span class="line">scroll_to_more: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 自动给目录添加序号</span></span><br><span class="line">toc_list_number: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 自动截取摘要</span></span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  length: <span class="number">150</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Lato 字体</span></span><br><span class="line">use_font_lato: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Make duoshuo show UA</span></span><br><span class="line"><span class="preprocessor"># user_id must NOT be null when admin_enable is true!</span></span><br><span class="line"><span class="preprocessor"># you can visit http://dev.duoshuo.com get duoshuo user id.</span></span><br><span class="line">duoshuo_info:</span><br><span class="line">  ua_enable: <span class="literal">true</span></span><br><span class="line">  admin_enable: <span class="literal">false</span></span><br><span class="line">  user_id: <span class="number">0</span></span><br><span class="line">  #admin_nickname: ROOT</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">## DO NOT EDIT THE FOLLOWING SETTINGS</span></span><br><span class="line"><span class="preprocessor">## UNLESS YOU KNOW WHAT YOU ARE DOING</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 动画</span></span><br><span class="line">use_motion: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Fancybox 看图插件</span></span><br><span class="line">fancybox: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Static files</span></span><br><span class="line">vendors: vendors</span><br><span class="line">css: css</span><br><span class="line">js: js</span><br><span class="line">images: images</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Theme version</span></span><br><span class="line">version: <span class="number">0.4</span><span class="number">.5</span><span class="number">.1</span></span><br></pre></td></tr></table></figure></p>
<h3 id="选择Scheme">选择Scheme</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">scheme</span>: <span class="string">Mist</span></span><br></pre></td></tr></table></figure>
<h3 id="添加网站图标">添加网站图标</h3><p>将网站图标文件 favicon.ico 放到source目录下面<br>修改主题_config.yml文件<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">favicon</span>: <span class="string">/favicon.ico</span></span><br></pre></td></tr></table></figure></p>
<h3 id="菜单设置">菜单设置</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">menu</span>:</span><br><span class="line">  <span class="attribute">home</span>: /</span><br><span class="line">  <span class="attribute">archives</span>: /archives</span><br><span class="line">  <span class="attribute">categories</span>: /categories</span><br><span class="line">  <span class="attribute">tags</span>: /tags</span><br><span class="line">  <span class="attribute">commonweal</span>: /<span class="number">404</span>.html</span><br><span class="line">  <span class="attribute">about</span>: /about</span><br></pre></td></tr></table></figure>
<h3 id="标签页面">标签页面</h3><p>执行命令行<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page <span class="string">"tags"</span></span><br></pre></td></tr></table></figure></p>
<p>到生成的页面文件里<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2015-10-4 22:37:08</span><br><span class="line">type: "tags"</span><br><span class="line"><span class="header">comments: false    #关闭评论（建议）</span><br><span class="line">---</span></span><br></pre></td></tr></table></figure></p>
<h3 id="分类页面">分类页面</h3><p>执行命令行<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page <span class="string">"categories"</span></span><br></pre></td></tr></table></figure></p>
<p>到生成的页面文件里<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2015-10-4 22:37:08</span><br><span class="line">type: "categories"</span><br><span class="line"><span class="header">comments: false    #关闭评论（建议）</span><br><span class="line">---</span></span><br></pre></td></tr></table></figure></p>
<h3 id="关于页面">关于页面</h3><p>执行命令行<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page <span class="string">"about"</span></span><br></pre></td></tr></table></figure></p>
<p>到生成的页面文件里<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: about</span><br><span class="line">date: 2015-10-4 22:37:08</span><br><span class="line">type: "about"</span><br><span class="line"><span class="header">comments: false    #关闭评论（建议）</span><br><span class="line">---</span></span><br></pre></td></tr></table></figure></p>
<h3 id="RSS链接">RSS链接</h3><p>编辑主题的_config.yml文件<br>禁止：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">rss:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">rss:</span></span><br></pre></td></tr></table></figure></p>
<p>需要安装插件 hexo-generator-feed ，继续看下面有安装插件教程<br>自定义：<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">rss:</span> url<span class="preprocessor">#自定义的地址</span></span><br></pre></td></tr></table></figure></p>
<h3 id="侧边栏设置">侧边栏设置</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">sidebar:</span> post  <span class="preprocessor">#只在文章页面自动显示</span></span><br><span class="line"><span class="preprocessor">#sidebar: always #在所以页面自动显示</span></span><br><span class="line"><span class="preprocessor">#sidebar: hide #全隐藏</span></span><br></pre></td></tr></table></figure>
<h3 id="腾讯公益_404_页面">腾讯公益 404 页面</h3><p>source 目录下新建 404.html 页面<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"content-type"</span> <span class="attribute">content</span>=<span class="value">"text/html;charset=utf-8;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"X-UA-Compatible"</span> <span class="attribute">content</span>=<span class="value">"IE=edge,chrome=1"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">name</span>=<span class="value">"robots"</span> <span class="attribute">content</span>=<span class="value">"all"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">name</span>=<span class="value">"robots"</span> <span class="attribute">content</span>=<span class="value">"index,follow"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">src</span>=<span class="value">"http://www.qq.com/404/search_children.js"</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span> <span class="attribute">homePageUrl</span>=<span class="value">"your-site-url"</span> <span class="attribute">homePageName</span>=<span class="value">"回到我的主页"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="首页文章摘录">首页文章摘录</h3><p>在主题配置文件添加<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  length: <span class="number">150</span> <span class="preprocessor">#默认截取的长度为 <span class="number">150</span> 字符</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h1 id="扩展">扩展</h1><h2 id="评论系统">评论系统</h2><h3 id="多说评论系统">多说评论系统</h3><p>注册<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>，配置域名站点域名 xxx.duoshuo.com<br>在站点配置文件添加：<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">duoshuo_shortname</span>: <span class="string">xxx</span></span><br></pre></td></tr></table></figure></p>
<h2 id="设置网站统计">设置网站统计</h2><h3 id="百度统计">百度统计</h3><p>登陆注册<a href="http://tongji.baidu.com/web/welcome/login" target="_blank" rel="external">百度统计</a>，配置后到代码获取页面，<br>找到代码里 <code>hm?js</code> 复制后面一串字符串ID  xxx<br>在站点配置文件添加：<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">baidu_analytics</span>: <span class="string">xxxxxxxxxxxxxxxx</span></span><br></pre></td></tr></table></figure></p>
<h2 id="分享">分享</h2><h3 id="百度分享">百度分享</h3><p>在站点配置文件添加：<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 百度分享服务</span></span><br><span class="line">baidushare: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<h3 id="多说分享">多说分享</h3><p>在站点配置文件添加：<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 多说分享服务</span></span><br><span class="line">duoshuo_share: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<h2 id="版权协议">版权协议</h2><p>在站点配置文件添加：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Creative Commons 4.0 International License.</span><br><span class="line"># http:<span class="comment">//creativecommons.org/</span></span><br><span class="line"># Available: <span class="keyword">by</span> | <span class="keyword">by</span>-nc | <span class="keyword">by</span>-nc-nd | <span class="keyword">by</span>-nc-<span class="keyword">sa</span> | <span class="keyword">by</span>-nd | <span class="keyword">by</span>-<span class="keyword">sa</span> | zero</span><br><span class="line">creative_commons: <span class="keyword">by</span>-nc-<span class="keyword">sa</span></span><br></pre></td></tr></table></figure></p>
<h2 id="网站访问量统计">网站访问量统计</h2><p>使用 <a href="http://service.ibruce.info/" target="_blank" rel="external">不蒜子</a> 提供的服务<br>算法a: pv的方式, 单个用户连续点击n篇文章, 记录n次访问量.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_container_site_pv"</span>&gt;</span></span><br><span class="line">    本站总访问量<span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>算法b: uv的方式, 单个用户连续点击n篇文章, 只记录1次访客数.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_container_site_uv"</span>&gt;</span></span><br><span class="line">  本站访客数<span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>人次</span><br><span class="line"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>找到themes/next/layout/partials/footer.wsig文件<br>在最后一行前面添加<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">async</span> <span class="attribute">src</span>=<span class="value">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_container_site_pv"</span>&gt;</span></span><br><span class="line">    本站总访问量<span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="网站运行时间">网站运行时间</h2><p>在最后一行前面添加<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line"><span class="keyword">var</span> birthDay = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"11/20/2014"</span>);</span><br><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> duration = now.getTime() - birthDay.getTime();</span><br><span class="line"><span class="keyword">var</span> total= <span class="built_in">Math</span>.floor(duration / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>));</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"showDays"</span>).innerHTML = <span class="string">"本站已运行 "</span>+total+<span class="string">" 天"</span>;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"showDays"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="认识hexo">认识hexo</h1><p>&#8195;&#8195;hexo是一款基于Node.js的静态博客框架，可以生成静态文件并且一键部署到github pages上，并且他可以使用markdown来编写文章，十分简单。</p>
<p>他有许多优点：</]]>
    </summary>
    
      <category term="blog" scheme="http://qiutc.me/tags/blog/"/>
    
      <category term="hexo" scheme="http://qiutc.me/tags/hexo/"/>
    
      <category term="nodejs" scheme="http://qiutc.me/tags/nodejs/"/>
    
      <category term="教程" scheme="http://qiutc.me/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="nodejs" scheme="http://qiutc.me/categories/nodejs/"/>
    
      <category term="教程" scheme="http://qiutc.me/categories/nodejs/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
